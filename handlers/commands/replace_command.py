import os
import traceback

from aiogram.types import Message, ReactionTypeEmoji

import db
from handlers.commands.shared import is_allowed_to_alter_memory
from utils import log_command

bot_id = int(os.getenv("TELEGRAM_TOKEN").split(":")[0])


async def replace_command(message: Message) -> None:
    await log_command(message)

    if not await is_allowed_to_alter_memory(message):
        await message.reply("‚ùå <b>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.</b>")
        return

    if not message.reply_to_message:
        await message.reply("‚ùå <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: <i>/replace [—Ç–µ–∫—Å—Ç]</i> –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ "
                            "–Ω—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.")
        return

    target = message.reply_to_message.message_id
    new_text = message.text.split(" ", maxsplit=1)[1]

    result = await db.replace_message(message.chat.id, target, new_text)

    if result:
        await message.react([ReactionTypeEmoji(emoji="üëå")])
        if message.reply_to_message.from_user.id == bot_id:
            try:
                await message.reply_to_message.edit_text(new_text)
            except Exception:
                traceback.print_exc()
                return
    else:
        await message.reply("‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏.</b>")

import datetime

from aiogram.types import Message

import api.google
import api.openai
import db
from utils import log_command


async def status_command(message: Message):
    if await db.is_blacklisted(message.from_user.id):
        await message.reply("‚ùå <b>–í—ã –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞. –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è.</b>")
        return
    if await db.is_blacklisted(message.chat.id):
        await message.reply("‚ùå <b>–≠—Ç–æ—Ç —á–∞—Ç –±—ã–ª –≤–Ω–µ—Å—ë–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞. –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—é–¥–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è.</b>")
        return

    await log_command(message)

    messages = await db.get_messages(message.chat.id)

    messages_limit = await db.get_chat_parameter(message.chat.id, "message_limit")

    current_endpoint = await db.get_chat_parameter(message.chat.id, "endpoint")
    if current_endpoint == "openai":
        table_prefix = "o_"
    elif current_endpoint == "google":
        table_prefix = "g_"
    else:
        table_prefix = "o_"
    current_model = await db.get_chat_parameter(message.chat.id, table_prefix + "model")

    token_count = "‚è± –°–µ–∫—É–Ω–¥—É..."

    if current_endpoint == "openai":
        token_count = str(await api.openai.count_tokens(message.chat.id)) + " —Ç–æ–∫–µ–Ω–æ–≤"

    text_to_send = f"""üëã <b>–Ø —Ç—É—Ç!</b>

üí¨ <b>–ü–∞–º—è—Ç—å:</b> {len(messages)}/{messages_limit} —Å–æ–æ–±—â–µ–Ω–∏–π <i>({token_count})</i>
‚ú® <b>–ú–æ–¥–µ–ª—å:</b> <i>{current_model}</i>
üÜî <b>ID —á–∞—Ç–∞:</b> <code>{message.chat.id}</code>"""

    rate_limit_per_hour = await db.get_chat_parameter(message.chat.id, "max_requests_per_hour")
    request_count = await db.get_request_count(message.chat.id, datetime.timedelta(hours=1))
    quota_text = "–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω" if rate_limit_per_hour == 0 else f"{request_count}/{rate_limit_per_hour}"

    text_to_send += f"\nüìä <b>–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å:</b> <i>{quota_text}</i>"

    if current_endpoint not in ["openai", "google"]:
        text_to_send += ("\n‚ö†Ô∏è <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ <code>endpoint</code></b>. –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π "
                         "–±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

    reply = await message.reply(text_to_send)

    if current_endpoint == "google":
        token_count = await api.google.count_tokens_for_chat(message)
        text_to_send = text_to_send.replace("‚è± –°–µ–∫—É–Ω–¥—É...", f"{token_count} —Ç–æ–∫–µ–Ω–æ–≤")
        await reply.edit_text(text_to_send)

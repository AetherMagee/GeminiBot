### TELEGRAM BOT SETTINGS
# Get these from @BotFather on Telegram
TELEGRAM_TOKEN='REPLACE_WITH_YOUR_BOT_TOKEN' # Example: 0123456789:ABCdefGHIjklMNOpqrsTUVwxyz
BOT_USERNAME='REPLACE_WITH_YOUR_BOT_USERNAME' # Example: myawesome_bot (without the @)

### DATABASE SETTINGS
# PostgreSQL Configuration
POSTGRES_USER='CHOOSE_DATABASE_USER' # Example: gemini
POSTGRES_PASSWORD='GENERATE_STRONG_PASSWORD' # IMPORTANT: Generate a secure random password. Easy way to get one: run `openssl rand -base64 16`
POSTGRES_HOST='db' # Use 'db' for Docker, or actual host address (like 127.0.0.1) if running natively

# Connection Pool Settings
POSTGRES_POOL_MIN_CONNECTIONS=2
POSTGRES_POOL_MAX_CONNECTIONS=10

### ADMINISTRATOR SETTINGS
# Comma-separated list of Telegram user IDs who can access admin commands
ADMIN_IDS='REPLACE_WITH_ADMIN_IDS' # Example: '123456789, 987654321'

# Channel/User ID where logs and feedback will be sent (set to 0 to disable)
FEEDBACK_TARGET_ID='REPLACE_WITH_ID' # Example: -1001234567890

### FILE PATHS (Uncomment ONLY ONE of the sets)
## FOR DOCKER DEPLOYMENT:
CACHE_PATH=/cache/
DATA_PATH=/data/
LOGS_PATH=/logs/

## FOR NATIVE DEPLOYMENT:
#CACHE_PATH=./data/cache/
#DATA_PATH=./data/bot/
#LOGS_PATH=./data/logs/

### GOOGLE SETTINGS
MAX_KEY_ROTATION_ATTEMPTS=15

### OPENAI SETTINGS (Not required if OAI_ENABLED is False)
OAI_ENABLED=True
OAI_API_URL='https://api.openai.com/' # WITHOUT v1/chat/completions, those are added automatically. For a reverse proxy like khanon's, the url should look like https://proxy-domain.com/proxy/openai
OAI_API_KEY='REPLACE_WITH_API_KEY'

### CACHE SETTINGS
PARAMS_CACHE_SIZE=4069
BLACKLIST_CACHE_SIZE=1024

### PROXY SETTINGS (Optional)
# Uncomment and configure if you need to use a proxy. Tested with SOCKS5, HTTP
#PROXY_URL='protocol://user:password@host:port'

# This proxy will only be used with grounded requests to Gemini API.
#GROUNDING_PROXY_URL='protocol://user:password@host:port'